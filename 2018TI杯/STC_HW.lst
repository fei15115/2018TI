C51 COMPILER V9.54   STC_HW                                                                04/11/2021 15:34:12 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE STC_HW
OBJECT MODULE PLACED IN STC_HW.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE 应用\STC_HW.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\应用) DEBUG OBJECTEX
                    -TEND PRINT(.\STC_HW.lst) TABS(2) OBJECT(STC_HW.obj)

line level    source

   1           //-----------------------------------------------
   2          // 版权归    SivaYao   所有
   3          // 第一次编程时间:2014年07月23日
   4          //-----------------------------------------------
   5          // 文件名：  STC_HW.C
   6          // 编写人：  SivaYao 
   7          // 编写时间：2013/05/26
   8          // 目标器件: STC8A8K
   9          // 编译工具: Keil uV3
  10          //-----------------------------------------------
  11          // 程序说明:
  12          // 此函数库用于STC8A8K最小系统板片上硬件(AD,
  13          //     CCP,SPI,定时器,外部中断,串口等)控制程序
  14          //-----------------------------------------------/
  15          
  16          #include     "STC_HW.H"
  17          //***********************************************
  18          //            五/硬件库程序
  19          //***********************************************
  20          /************************************************
  21          //5.1---SystemInit(STC8A8K硬件设置)
  22          ************************************************/
  23          //-----------------------------------------------
  24          //5.1.名称------SystemInit()功能:系统硬件配置初始化
  25          //入口:无  出口:无  全局:无     调用模块:无
  26          //-----------------------------------------------
  27          void   SystemInit (void)
  28          {
  29   1      //1----端口设置---
  30   1      //   P0M0      =  0xFF;
  31   1      //   P0M1      =  0x00;  //P0口--LCD数据高端,强推挽输出;
  32   1      //   P2M0      =  0xFF;
  33   1      //   P2M1      =  0x00;  //P2口--LCD数据低端,强推挽输出;
  34   1      
  35   1      //   P1M0      =  0x00;  //P1[0123]--AD,高阻;P1[45]--SDASCL,准双向;P1[67]--晶振,高阻
  36   1      //   P1M1      =  0xCF;   
  37   1      //   P3M0      =  0x02;
  38   1      //   P3M1      =  0x00;  //P3[0..7]--RXD,TXD,INT01,T0,CM1,INT23--准双向
  39   1        P3M1      =  0X81;
  40   1        P3M0      =  0X02;
  41   1        P4M1      =  0x02;
  42   1        P4M0      =  0x0D;  //P4[0..4]---CSDA,LCDCS,WR,FCS,2401CS推挽
  43   1        P5M1      =  0X00;
  44   1        P5M0      =  0x02;
  45   1        P7M1      =  0x00;
  46   1        P7M0      =  0X08;
  47   1      
  48   1      //   P5M0      =  0x20;  //P5[5]--2401CE---推挽
  49   1      //   P5M1      =  0x00;  //P5[01234]--RX3 TX3 RX4 TX4 RST --准双向
  50   1      
  51   1      //   P6M0      =  0xBF;  //P6[0123457]---PWM0123,CSDA2,7279CS,CLK--推挽
  52   1      //   P6M1      =  0x00;  //P6[6]---DAT---准双向
  53   1      //             
  54   1      //   P7M0      =  0xDF;  //P7[01234]---CCP012,RS,XRST---推挽
C51 COMPILER V9.54   STC_HW                                                                04/11/2021 15:34:12 PAGE 2   

  55   1      //   P7M1      =  0x40;  //P7[567]---MOSI,MISO,SCLK---准双向
  56   1      //2----时钟设置(略)
  57   1         P_SW2     =  0x80;        //启动扩展SFR
  58   1         XOSCCR    =  0xC0;        //开启外部晶振
  59   1         while ((XOSCCR & 0x01)==0) {};    //等待外部晶振稳定
  60   1         CLKDIV    = 0x00;         //系统时钟不分频
  61   1         CKSEL     = 0x01;         //时钟切换到外部晶振 */
  62   1      //3-----定时器配置
  63   1      //3.1-----T0和T1
  64   1         TMOD    = 0x00 ;       //定时器0工作模式0.定时器1模式1(16位自动重装)
  65   1         AUXR    = AUXR | 0x80 ;//定时器0不分频
  66   1         TH0     = (65536 - 33000000/400) /256 ;
  67   1         TL0     = (65536 - 33000000/400) %256 ; //定时器0初值(1秒400次中断2.5ms)
  68   1         //TR0     = 1 ;    //定时器0开始运行
  69   1         //TR1     = 1 ;    //定时器1开始运行
  70   1         ET0     = 1 ;    //定时器0中断许可 */
  71   1      //4-----AD配置
  72   1         //ADCCFG  = 0x21 ;   //右对齐,速度1(64)
  73   1         //ADC_CONTR=0x80 ;   //打开电源
  74   1      //   ADC_CONTR = 0x8B;    //上电,启动AD通道2.
  75   1      //5----串口配置
  76   1         AUXR     |= 0x15 ;   //串口1使用定时器2(1T);
  77   1         T2H       = (65536 - (33000000/38400/4))/256;//设置波特率38400
  78   1         T2L       = (65536 - (33000000/38400/4))%256;
  79   1         SCON      = 0x50;    //SM0,SM1=01--8位UART,可变波特率
  80   1                              //S0MODE=0,MCE0=0,REN0=1
  81   1         ES        = 1;       //使能串口1中断
  82   1      //5----按键(按键阵列和旋转编码盘)中断设置
  83   1         INTCLKO |=  0x20;  //EX3 = 1 ;
  84   1         EA       =  1  ;
  85   1         
  86   1         }
  87          
  88          
  89          /***********************************************/
  90          //5.4---SPI子程序
  91          //5.4.1-------SPI_Conf       (SPI配置程序)
  92          //5.4.2-------SPI_Send       (SPI字节发送程序)
  93          //5.4.3-------SPI_Recv       (SPI字节接收程序)
  94          /***********************************************/
  95          
  96          /*****5.4.1----SPI配置程序  SPI_Conf()**********/
  97          void     SPI_Conf  ( void )
  98          {
  99   1           P_SW1 &=0xF3 ;   //1--配置SPI管脚
 100   1           P_SW1 |=0x08 ;   //   到P7.4到P7.7(固定)
 101   1           SPCTL  = 0x5F;   //2--SPI主机,高位先发,使能SPI,SCLK 3MHz.
 102   1           SPSTAT = 0xc0;   //3--清除中断标志和写中断标志
 103   1      
 104   1         }
 105          /*****5.4.2----SPI字节发送接收程序  SPI_Send()******/
 106          u8     SPI_Send       (u8 SPI_DATA)
 107          {
 108   1         SPDAT    =   SPI_DATA;  //1--写入发送字节
 109   1         while ((SPSTAT&0x80)==0) {;}//2--等待发送完成      
 110   1         _nop_();
 111   1         SPSTAT = 0xC0;        //3--写1清除SPIF位
 112   1         _nop_(); 
 113   1         return(SPDAT);   
 114   1         }
 115          /*****5.4.3----SPI字节接收程序  SPI_Recv()******/
 116          u8     SPI_Recv       ( void )
C51 COMPILER V9.54   STC_HW                                                                04/11/2021 15:34:12 PAGE 3   

 117          {
 118   1         SPI_Send(0x00) ;        //1--发送0x00
 119   1         return ( SPDAT );       //2--返回接收字节
 120   1         }
 121          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
